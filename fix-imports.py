"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏
–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–∞–∫ fix_imports.py –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ
"""
import sys
import os
from pathlib import Path

print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ YouTube Analyzer...")
print(f"Python –≤–µ—Ä—Å–∏—è: {sys.version}")
print(f"–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
required_files = [
    "backend/main.py",
    "backend/services.py", 
    "backend/models.py",
    "backend/database.py",
    "shared/config.py",
    "shared/utils.py",
    "shared/youtube_parser.py"
]

missing = []
for file in required_files:
    if Path(file).exists():
        print(f"‚úÖ {file}")
    else:
        print(f"‚ùå {file} - –ù–ï –ù–ê–ô–î–ï–ù!")
        missing.append(file)

if missing:
    print("\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã!")
    exit(1)

print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...")

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏
current_dir = Path(__file__).parent
sys.path.insert(0, str(current_dir))
sys.path.insert(0, str(current_dir / "backend"))
sys.path.insert(0, str(current_dir / "shared"))

# –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª–∏
try:
    print("–ò–º–ø–æ—Ä—Ç models...", end=" ")
    from backend import models
    print("‚úÖ")
except Exception as e:
    print(f"‚ùå\n  –û—à–∏–±–∫–∞: {e}")
    
try:
    print("–ò–º–ø–æ—Ä—Ç database...", end=" ")
    from backend import database
    print("‚úÖ")
except Exception as e:
    print(f"‚ùå\n  –û—à–∏–±–∫–∞: {e}")

try:
    print("–ò–º–ø–æ—Ä—Ç config...", end=" ")
    from shared import config
    print("‚úÖ")
except Exception as e:
    print(f"‚ùå\n  –û—à–∏–±–∫–∞: {e}")

try:
    print("–ò–º–ø–æ—Ä—Ç utils...", end=" ")
    from shared import utils
    print("‚úÖ")
except Exception as e:
    print(f"‚ùå\n  –û—à–∏–±–∫–∞: {e}")

try:
    print("–ò–º–ø–æ—Ä—Ç youtube_parser...", end=" ")
    from shared import youtube_parser
    print("‚úÖ")
except Exception as e:
    print(f"‚ùå\n  –û—à–∏–±–∫–∞: {e}")

try:
    print("–ò–º–ø–æ—Ä—Ç services...", end=" ")
    from backend import services
    print("‚úÖ")
except Exception as e:
    print(f"‚ùå\n  –û—à–∏–±–∫–∞: {e}")

print("\nüöÄ –ü—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä...")

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫
test_server = '''
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏
current_dir = Path(__file__).parent
project_root = current_dir.parent
sys.path.insert(0, str(project_root))
sys.path.insert(0, str(current_dir))

# –¢–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º
try:
    from main import app
    import uvicorn
    
    print("‚úÖ –ò–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã, –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä...")
    uvicorn.run(app, host="127.0.0.1", port=8000)
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
'''

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫–∞—Ç–æ—Ä
with open("backend/test_run.py", "w", encoding="utf-8") as f:
    f.write(test_server)

print("\n‚úÖ –°–æ–∑–¥–∞–Ω backend/test_run.py")
print("\n–¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:")
print("1. cd C:\\youtube-analyzer")
print("2. python backend/test_run.py")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤...")
import subprocess

required_packages = [
    "fastapi",
    "uvicorn", 
    "pydantic",
    "pandas",
    "openpyxl"
]

for package in required_packages:
    try:
        __import__(package)
        print(f"‚úÖ {package}")
    except ImportError:
        print(f"‚ùå {package} - –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù!")
        print(f"   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install {package}")

print("\n" + "="*50)
input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")