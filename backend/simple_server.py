"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è YouTube Analyzer
"""
from fastapi import FastAPI, Request
from fastapi.responses import FileResponse, JSONResponse
from fastapi.staticfiles import StaticFiles
from fastapi.middleware.cors import CORSMiddleware
import uvicorn
from pathlib import Path
import sys

# –ü—É—Ç–∏
current_dir = Path(__file__).parent
project_root = current_dir.parent
frontend_path = project_root / "frontend"

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(str(project_root))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
try:
    from backend.services import (
        tasks_router, youtube_router, 
        analysis_router, data_router, config_router
    )
    services_loaded = True
except Exception as e:
    print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤: {e}")
    services_loaded = False

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = FastAPI(title="YouTube Analyzer")

# CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# API —Ä–æ—É—Ç–µ—Ä—ã
if services_loaded:
    app.include_router(tasks_router, prefix="/api/tasks")
    app.include_router(youtube_router, prefix="/api/youtube")
    app.include_router(analysis_router, prefix="/api/analysis")
    app.include_router(data_router, prefix="/api/data")
    app.include_router(config_router, prefix="/api/config")

# Health check
@app.get("/health")
async def health():
    return {"status": "ok", "service": "YouTube Analyzer"}

@app.get("/api")
async def api_info():
    return {
        "name": "YouTube Analyzer API",
        "version": "2.0",
        "services_loaded": services_loaded
    }

# –ú–æ–Ω—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.mount("/", StaticFiles(directory=str(frontend_path), html=True), name="static")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ YouTube Analyzer (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º)...")
    print(f"üìÅ Frontend –ø—É—Ç—å: {frontend_path}")
    print(f"‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã: {services_loaded}")
    print("üåê –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:8000")
    
    uvicorn.run(app, host="127.0.0.1", port=8000, log_level="info")
