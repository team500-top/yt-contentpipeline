"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ services.py –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–±–ª–µ–º
"""
import ast
import sys
from pathlib import Path

print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ services.py...")

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏
sys.path.insert(0, str(Path.cwd()))
sys.path.insert(0, str(Path.cwd() / "backend"))

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python...")
try:
    with open('backend/services.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    ast.parse(content)
    print("‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω!")
except SyntaxError as e:
    print(f"‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:")
    print(f"   –°—Ç—Ä–æ–∫–∞ {e.lineno}: {e.msg}")
    print(f"   –¢–µ–∫—Å—Ç: {e.text}")
    print(f"   –ü–æ–∑–∏—Ü–∏—è: {' ' * (e.offset-1)}^")

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...")
try:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ –∏–º–ø–æ—Ä—Ç—ã
    import json
    import asyncio
    import uuid
    from datetime import datetime, timedelta
    print("‚úÖ –ë–∞–∑–æ–≤—ã–µ –º–æ–¥—É–ª–∏ Python –¥–æ—Å—Ç—É–ø–Ω—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º FastAPI
    try:
        from fastapi import APIRouter, HTTPException
        print("‚úÖ FastAPI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("‚ùå FastAPI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("   –í—ã–ø–æ–ª–Ω–∏—Ç–µ: pip install fastapi")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏
    try:
        from models import *
        print("‚úÖ models.py –¥–æ—Å—Ç—É–ø–µ–Ω")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ models.py: {e}")
    
    try:
        from database import DatabaseManager
        print("‚úÖ database.py –¥–æ—Å—Ç—É–ø–µ–Ω")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ database.py: {e}")
    
    try:
        from shared.config import settings
        print("‚úÖ shared/config.py –¥–æ—Å—Ç—É–ø–µ–Ω")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ shared/config.py: {e}")
    
    try:
        from shared.utils import Utils
        print("‚úÖ shared/utils.py –¥–æ—Å—Ç—É–ø–µ–Ω")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ shared/utils.py: {e}")
    
    try:
        from shared.youtube_parser import YouTubeParser
        print("‚úÖ shared/youtube_parser.py –¥–æ—Å—Ç—É–ø–µ–Ω")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ shared/youtube_parser.py: {e}")

except Exception as e:
    print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤: {e}")

# 3. –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ services
print("\n3Ô∏è‚É£ –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ services.py...")
try:
    import services
    print("‚úÖ services.py —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤
    routers = ['tasks_router', 'youtube_router', 'analysis_router', 'data_router', 'config_router']
    for router in routers:
        if hasattr(services, router):
            print(f"‚úÖ {router} –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"‚ùå {router} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ services.py:")
    print(f"   {type(e).__name__}: {e}")
    
    # –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    import traceback
    print("\nüìã –ü–æ–ª–Ω—ã–π traceback:")
    traceback.print_exc()

# 4. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
print("1. –ï—Å–ª–∏ –µ—Å—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ - –∑–∞–ø—É—Å—Ç–∏—Ç–µ fix_services_complete.py")
print("2. –ï—Å–ª–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–æ–¥—É–ª–µ–π - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
print("3. –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã - –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python backend/main.py")
print("4. –í –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python backend/complete_server.py")

input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")