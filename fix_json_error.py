"""
–ü–∞—Ç—á –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è JSON –æ—à–∏–±–∫–∏ –≤ services.py
"""
import re

print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ JSON –æ—à–∏–±–∫–∏ –≤ services.py...")

# –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
try:
    with open('backend/services.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 1: process_task_with_checkpoints
    old_code1 = """processed_items = set(json.loads(current_task.get('items_processed', '[]')))
        failed_items = set(json.loads(current_task.get('items_failed', '[]')))"""
    
    new_code1 = """items_processed_data = current_task.get('items_processed', '[]')
        items_failed_data = current_task.get('items_failed', '[]')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –ø–∞—Ä—Å–∏–Ω–≥–æ–º
        if isinstance(items_processed_data, str):
            processed_items = set(json.loads(items_processed_data))
        elif isinstance(items_processed_data, list):
            processed_items = set(items_processed_data)
        else:
            processed_items = set()
        
        if isinstance(items_failed_data, str):
            failed_items = set(json.loads(items_failed_data))
        elif isinstance(items_failed_data, list):
            failed_items = set(items_failed_data)
        else:
            failed_items = set()"""
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    if old_code1 in content:
        content = content.replace(old_code1, new_code1)
        print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è process_task_with_checkpoints")
    else:
        # –ü–æ–ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–∏—Å–∫–∞
        pattern = r'processed_items = set\(json\.loads\(current_task\.get\(\'items_processed\', \'\[\]\'\)\)\)'
        if re.search(pattern, content):
            content = re.sub(
                r'processed_items = set\(json\.loads\(current_task\.get\(\'items_processed\', \'\[\]\'\)\)\)\s*\n\s*failed_items = set\(json\.loads\(current_task\.get\(\'items_failed\', \'\[\]\'\)\)\)',
                new_code1,
                content
            )
            print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è process_task_with_checkpoints (regex)")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    with open('backend/services.py', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ –§–∞–π–ª services.py —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

# –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–º database.py
print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ database.py...")

try:
    with open('backend/database.py', 'r', encoding='utf-8') as f:
        db_content = f.read()
    
    # –ò—â–µ–º –ø–æ—Ö–æ–∂–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
    if 'json.loads(' in db_content:
        # –î–æ–±–∞–≤–ª—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É JSON
        old_pattern = r'(\w+) = json\.loads\((\w+)\)'
        new_pattern = r'try:\n            \1 = json.loads(\2) if isinstance(\2, str) else \2\n        except:\n            \1 = []'
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
        new_db_content = re.sub(old_pattern, new_pattern, db_content)
        if new_db_content != db_content:
            with open('backend/database.py', 'w', encoding='utf-8') as f:
                f.write(new_db_content)
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ JSON –≤ database.py")
        else:
            print("‚úÖ database.py —É–∂–µ –±–µ–∑–æ–ø–∞—Å–µ–Ω")
            
except Exception as e:
    print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å database.py: {e}")

print("\n‚úÖ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ run_fixed.bat")
input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")