"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏ –≤ services.py
"""
import re

print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏ –≤ services.py...")

try:
    with open('backend/services.py', 'r', encoding='utf-8') as f:
        lines = f.readlines()
    
    # –ò—â–µ–º —Å—Ç—Ä–æ–∫—É 389 –∏ –æ–∫—Ä—É–∂–∞—é—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    fixed = False
    in_try_block = False
    try_indent = ""
    
    for i in range(len(lines)):
        line = lines[i]
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—á–∞–ª–æ try –±–ª–æ–∫–∞
        if line.strip().startswith('try:'):
            in_try_block = True
            try_indent = line[:len(line) - len(line.lstrip())]
        
        # –ï—Å–ª–∏ –º—ã –≤ try –±–ª–æ–∫–µ –∏ –≤—Å—Ç—Ä–µ—á–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å –º–µ–Ω—å—à–∏–º –æ—Ç—Å—Ç—É–ø–æ–º
        elif in_try_block and line.strip() and not line.startswith(try_indent + ' '):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ except –∏–ª–∏ finally
            if not line.strip().startswith(('except', 'finally')):
                # –í—Å—Ç–∞–≤–ª—è–µ–º except –ø–µ—Ä–µ–¥ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π
                lines.insert(i, f"{try_indent}except Exception as e:\n")
                lines.insert(i+1, f"{try_indent}    print(f'–û—à–∏–±–∫–∞: {{e}}')\n")
                lines.insert(i+2, f"{try_indent}    pass\n")
                fixed = True
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –±–ª–æ–∫ except –≤ —Å—Ç—Ä–æ–∫—É {i}")
                break
            else:
                in_try_block = False
    
    # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É, –∏—â–µ–º –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ try –±–ª–æ–∫–∏
    if not fixed:
        content = ''.join(lines)
        
        # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ try –±–µ–∑ except/finally
        pattern = r'(\n\s*)try:((?:\n(?!\1(?:except|finally)).*)*)'
        
        def add_except(match):
            indent = match.group(1)
            return match.group(0) + f"{indent}except Exception as e:{indent}    pass\n"
        
        # –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ try –±–ª–æ–∫–∏ –±–µ–∑ except
        new_content = re.sub(pattern, add_except, content)
        
        if new_content != content:
            lines = new_content.splitlines(True)
            fixed = True
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –±–ª–æ–∫–∏ except")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open('backend/services.py', 'w', encoding='utf-8') as f:
        f.writelines(lines)
    
    if fixed:
        print("‚úÖ –§–∞–π–ª services.py —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!")
    else:
        print("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–æ–±–ª–µ–º—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä–æ–∫—É 389 –≤—Ä—É—á–Ω—É—é")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ - —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –±–µ–∑ services
print("\nüí° –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ:")
print("   –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä:")
print("   python backend/working_server.py")

input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")